Success: no semantic error is found.

================================================================================
Code with indentations:
func Fib :: ( n::int ) -> int
begin
    if n <= 1 then
        return n;
    else
        return Fib(n - 1) + Fib(n - 2);
    end
end
func main :: (  ) -> int
begin
    var fib :: int;
    fib <- Fib(10);
    print fib;
    if fib < 10 then
        begin
            fib <- 1;
        end
    else
        begin
            fib <- 0;
        end
    end
    return fib;
end
================================================================================
Code with indentations and comments for running environment:
func Fib :: ( n::int ) -> int
// relative address of parameter n from func call base is -1
begin
    if n[-1] <= 1 then
        return n[-1];
    else
        return Fib(n[-1] - 1) + Fib(n[-1] - 2);
    end
end
func main :: (  ) -> int
begin
    var fib :: int; // relative address of local variable fib from func call base is 1
    fib[1] <- Fib(10);
    print fib[1];
    if fib[1] < 10 then
        begin
            fib[1] <- 1;
        end
    else
        begin
            fib[1] <- 0;
        end
    end
    return fib[1];
end
================================================================================
Execute:
55
Returned value by main: 0
================================================================================
